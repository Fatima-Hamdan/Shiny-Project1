temp = read.table('https://s3.amazonaws.com/graderdata/Temp.txt', header = TRUE)
data("temp)
data(temo)
data(temp)
data('temp')
head(temo)
head(temp)
getwd()
ManhattanSales <- read.csv("rollingsales_Manhattan.csv",stringsAsFactors = FALSE)
ManhattanSales <- read.csv("rollingsales_Manhattan2017.csv",stringsAsFactors = FALSE)
head(ManhattanSales)
ManhattanSales <- read.csv("rollingsales_Manhattan2017.csv",stringsAsFactors = FALSE)
head(ManhattanSales)
str(ManhattanSales)
names(ManhattanSales)= tolower(names(ManhattanSales))
str(ManhattanSales)
names(ManhattanSales)<- tolower(names(ManhattanSales))
str(ManhattanSales)
head(ManhattanSales)
names(ManhattanSales)<- tolower(names(ManhattanSales))
ncol(ManhattanSales)
ManhattanSales <- rename(SALE DATE= 'SALE.DATE')
ManhattanSales <- rename(ManhattanSales,SALE DATE= 'SALE.DATE')
ManhattanSales <- rename(ManhattanSales,SALE.DATE= 'SALE DATE')
ManhattanSales <- rename(ManhattanSales,SALE.DATE= 'sale date')
library(dplyr)
ManhattanSales <- rename(ManhattanSales,SALE.DATE= 'sale date')
ManhattanSales <- rename(ManhattanSales,SALE.DATE= 'SALE DATE')
ManhattanSales <- mutate(.,SALE DATE = as.Date(Sale DATE))
ManhattanSales <- mutate(.,SALE.DATE = as.Date(Sale DATE))
ManhattanSales <- mutate(.,SALE.DATE = as.Date(Sale.DATE))
ManhattanSales <- mutate(.,SALE.DATE = as.Date(SALE.DATE))
ManhattanSales <- mutate(.,SALE.DATE = as.Date(sale.date))
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
ManhattanSales <- read.csv("rollingsales_Manhattan2017.csv",stringsAsFactors = FALSE)
names(ManhattanSales)<- tolower(names(ManhattanSales))
str(ManhattanSales)
ManhattanSales <- mutate(.,SALE.DATE = as.Date(SALE.DATE))
ManhattanSales <- mutate(.,sale.date = as.Date(sale.date))
ManhattanSales <- mutate(.,saledate = as.Date(sale.date))
library(dplyr)
ManhattanSales <- mutate(.,sale.date = as.Date(sale.date))
ManhattanSales <- mutate(.,saledate = as.Date(sale.date))
runApp()
ManhattanSales <- mutate(.,saledate = as.Date(sale.date))
ManhattanSales <- mutate(.,sale.date = as.Date(sale.date))
ManhattanSales <- mutate(.,sale.date = as.Date(sale.date))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(DT)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
ManhattanSalesDF
class(ManhattanSalesDF)
head(ManhattanSalesDF)
str(ManhattanSalesDF)
head(ManhattanSales)
runApp()
class(ManhattanSales)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
str(ManhattanSales)
class(ManhattanSales)
str(ManhattanSales)
ManhattanSales <- read.csv("rollingsales_Manhattan2017.csv",stringsAsFactors = FALSE)
rm(list(ls))
rm(list(ls()))
rm(list=ls())
ManhattanSales <- read.csv("rollingsales_Manhattan2017.csv",stringsAsFactors = FALSE)
runApp()
runApp()
str(ManhattanSales)
runApp()
runApp()
str(ManhattanSales)
ManhattanSales <- ManhattanSales %>% mutate(sale_date = as.Date(sale_date, "%m/%d/%Y"))
str(ManhattanSales)
ManhattanSales<- ManhattanSales %>% mutate(month=as.numeric(format(sale_date, "%m")))
runApp()
str(ManhattanSales)
ManhattanSales$sale_price = sapply(ManhattanSales$sale_price,impute)
str(ManhattanSales)
head(ManhattanSales
)
str(ManhattanSales)
runApp()
ManhattanSales$sale_price = sapply(ManhattanSales$sale_price,impute)
str(ManhattanSales)
head(ManhattanSales)
head(ManhattanSales$apartment._number,20)
runApp()
head(ManhattanSales$apartment._number,20)
head(ManhattanSales$sale_price,20)
runApp()
head(ManhattanSales$apartment._number,20)
head(ManhattanSales$sale_price,20)
head(ManhattanSales$apartment._number,20)
runApp()
head(ManhattanSales$apartment._number,20)
str(ManhattanSales)
head(ManhattanSales)
head(ManhattanSales$land_square_feet,20)
imputeZero = function(x){
if (x ==0)
return(NA)
else
return(x)
}
ManhattanSales$year_built = sapply(ManhattanSales$year_built,impute)
ManhattanSales$year_built[17460]
ManhattanSales$year_built[17461]
ManhattanSales$year_built[17459]
ManhattanSales$year_built = sapply(ManhattanSales$year_built,imputeZero)
ManhattanSales$year_built[17459]
runApp()
runApp()
runApp()
?fluidRow
?column
selectizeInput()?
?selectizeInput
runApp()
?min
runApp()
runApp()
x= min(as.integer(ManhattanSales$sale_price)
)
x= max(as.integer(ManhattanSales$sale_price))
x= min(as.integer(ManhattanSales$sale_price),na.rm= TRUE)
y = max(as.integer(ManhattanSales$sale_price),na.rm= TRUE)
runApp()
runApp()
runApp()
runApp()
c = c(1,2,3)
c+ 4
c + [4]
c[-1] = 10
cbind(3)
c = cbind(3)
s = c(1,2,3)
s = c(s,7)
s= c(1,2,3)
a = c(1,2,3)
a = c(a,7)
runApp()
?box
runApp()
?column
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?renderDataTable()
runApp()
?reactive
runApp()
runApp()
?renderDataTable()
runApp()
runApp()
runApp()
?selectizeInput
runApp()
runApp()
runApp()
?observe?
?observe
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
str(ManhattanSales)
runApp()
str(ManhattanSales)
runApp()
runApp()
runApp()
?else
?if
?if (condition) {
}
runApp()
else
else
else{}
x= 1
if (x = 1)
if (x = 1){}
if (x = 1){
if (x == 1){
y= 2
else
if (x == 1){
y=2 }
else{
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
rm(list=ls())
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
input$PriceRange[1]
runApp()
runApp()
runApp()
runApp()
runApp()
?filter
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
str(ManhattanSales)
runApp()
?sapply
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("ggvis")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(rsconnect)
rsconnect::setAccountInfo(name='project1-fatimahamdan', token='40FC75111715A7F52CA9E8918D420295', secret='A39OjwBhkTJ3C8acP7gadAWxKVbuSVGLcGpxPEAK')
rsconnect::setAccountInfo(name='project1-fatimahamdan', token='40FC75111715A7F52CA9E8918D420295', secret='A39OjwBhkTJ3C8acP7gadAWxKVbuSVGLcGpxPEAK')
rsconnect::setAccountInfo(name='project1-fatimahamdan',
token='40FC75111715A7F52CA9E8918D420295',
secret='<SECRET>')
rsconnect::setAccountInfo(name='project1-fatimahamdan',
token='40FC75111715A7F52CA9E8918D420295',
secret='A39OjwBhkTJ3C8acP7gadAWxKVbuSVGLcGpxPEAK')
rsconnect::deployApp('C:/Users/USER/Desktop/Shiny-Project_SalesInManhattan')
runApp()
runApp()
shiny::runApp()
runApp()
devtools::install_github("rstudio/leaflet")
library(leaflet)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
